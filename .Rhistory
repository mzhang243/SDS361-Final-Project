modvector[h] <- mods[k]
allmods[h] <- "modified"
k <- k + 1
}
#bind vector of modifications onto the beginning of our dataset
new <- cbind(modvector, dataset)
new <- cbind(allmods, new)
#now, we remove the unnecessary columns (cataloguing information we are not going to use)
#also, renaming columns for clarity (...modified... -> ...Mn...)
new.filtered <- new %>% select(-ends_with("mapped_depth")) %>% select(-ends_with("read_depth")) %>%
select(-starts_with("Denatured")) %>% select(-ends_with("profile")) %>% select(-ends_with("err")) %>%
rename(
Mn_mutations = Modified_mutations,
Mn_effective_depth = Modified_effective_depth,
Mn_rate = Modified_rate,
Modifications = modvector,
AllModifications = allmods
)
#We filter out the one point with > 0.99 mutation rate
new.filtered <- new.filtered %>% filter(Mn_rate < 0.99, Untreated_rate < 0.99)
new.filtered
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate" (Control))
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
#change path
dataset <- read_excel("1Mg2Mn_18S_human_18S_profile.xlsx")
#modifications and positions extracted from 3D Modifications U of Albany database
mods <- c("Am", "pseu", "pseu", "pseu", "Am", "pseu", "pseu", "Um", "pseu",
"Um", "Am", "Am", "Um", "Cm", "pseu", "pseu", "pseu", "Um", "Gm",
"Cm", "Am", "Am", "Gm", "Am", "Cm", "pseu", "Am", "Am", "Gm", "pseu",
"Um", "Gm", "pseu", "pseu", "Am", "pseu", "Gm", "pseu", "Cm", "Um",
"pseu", "pseu", "pseu", "pseu", "pseu", "pseu", "Gm", "pseu", "pseu",
"pseu", "Am", "pseu", "pseu", "pseu", "pseu", "pseu", "m1acp3Y", "Cm",
"Um", "pseum", "Gm", "pseu", "pseu", "Am", "Cm", "Um", "pseu", "Gm",
"pseu", "m7G", "pseu", "Am", "pseu", "Cm", "Um", "m6A", "m62A", "m62A")
nums <- c(27, 44, 46, 93, 99, 105, 109, 116, 119, 121, 159, 166, 172, 174, 210,
218, 406, 428, 436, 462, 468, 484, 509, 512, 517, 572, 576, 590, 601,
609, 627, 644, 659, 651, 668, 681, 683, 686, 797, 799, 801, 814, 815,
822, 863, 866, 867, 918, 966, 1004, 1031, 1056, 1081, 1174, 1238, 1244,
1248, 1272, 1288, 1326, 1328, 1347, 1367, 1383, 1391, 1442, 1445, 1490,
1625, 1639, 1643, 1678, 1692, 1703, 1804, 1832, 1850, 1851)
#intersperse modifications with labels of "none" to create a vector with same size as dataset
modvector <- rep("none", dim(dataset)[1])
allmods <- rep("not modified", dim(dataset)[1])
k <- 1
for (h in nums) {
modvector[h] <- mods[k]
allmods[h] <- "modified"
k <- k + 1
}
#bind vector of modifications onto the beginning of our dataset
new <- cbind(modvector, dataset)
new <- cbind(allmods, new)
#now, we remove the unnecessary columns (cataloguing information we are not going to use)
#also, renaming columns for clarity (...modified... -> ...Mn...)
new.filtered <- new %>% select(-ends_with("mapped_depth")) %>% select(-ends_with("read_depth")) %>%
select(-starts_with("Denatured")) %>% select(-ends_with("profile")) %>% select(-ends_with("err")) %>%
rename(
Mn_mutations = Modified_mutations,
Mn_effective_depth = Modified_effective_depth,
Mn_rate = Modified_rate,
Modifications = modvector,
AllModifications = allmods
)
#We filter out the one point with > 0.99 mutation rate
new.filtered <- new.filtered %>% filter(Mn_rate < 0.99, Untreated_rate < 0.99)
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
modified <- new.filtered %>% filter(AllModifications == "modified")
mean(modified$Mn_rate)
mean(modified$Untreated_rate)
wilcox.test(modified$Mn_rate, modified$Untreated_rate, alternative = "greater")
unmodified <- new.filtered %>% filter(AllModifications == "none")
mean(unmodified$Mn_rate)
mean(unmodified$Untreated_rate)
wilcox.test(unmodified$Mn_rate, unmodified$Untreated_rate, alternative = "greater")
modified <- new.filtered %>% filter(AllModifications == "modified")
mean(modified$Mn_rate)
mean(modified$Untreated_rate)
wilcox.test(modified$Mn_rate, modified$Untreated_rate, alternative = "greater")
unmodified <- new.filtered %>% filter(AllModifications == "not modified")
mean(unmodified$Mn_rate)
mean(unmodified$Untreated_rate)
wilcox.test(unmodified$Mn_rate, unmodified$Untreated_rate, alternative = "greater")
#Filters the dataset into two datasets, one with modified sites and one without
modified <- new.filtered %>% filter(AllModifications == "modified")
unmodified <- new.filtered %>% filter(AllModifications == "not modified")
mean(modified$Mn_rate)
mean(modified$Untreated_rate)
wilcox.test(modified$Mn_rate, modified$Untreated_rate, alternative = "greater")
mean(unmodified$Mn_rate)
mean(unmodified$Untreated_rate)
wilcox.test(unmodified$Mn_rate, unmodified$Untreated_rate, alternative = "greater")
wilcox.test(Mn_rate ~ Sequence, data = new.filtered)
kruskal.test(Mn_rate ~ Sequence, data = new.filtered)
#Small p-value would indicate that the group means are different
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
new.filtered %>% ggplot(aes(x= Mn_rate)) + geom_histogram() +
facet_wrap("AllModifications", ncol = 1, scales = "free_y") +
xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites",
x = "Mutation Rate in experimental Sample", y = "Frequency")
mean(unmodified$Mn_rate)
mean(modified$Mn_rate)
#Filters the dataset into two datasets, one with modified sites and one without
modified <- new.filtered %>% filter(AllModifications == "modified")
unmodified <- new.filtered %>% filter(AllModifications == "not modified")
wilcox.test(modified$Mn_rate, unmodified$Mn_rate, alternative = "greater")
wilcox.test(unmodified$Mn_rate, unmodified$Untreated_rate, alternative = "greater")
#Filters the dataset into two datasets, one with modified sites and one without
modified <- new.filtered %>% filter(AllModifications == "modified")
unmodified <- new.filtered %>% filter(AllModifications == "not modified")
wilcox.test(modified$Mn_rate, unmodified$Mn_rate, alternative = "greater")
wilcox.test(unmodified$Mn_rate, unmodified$Untreated_rate, alternative = "greater")
modified_experimental_outliers <- boxplot(modified$Mn_rate, plot = FALSE)$out
modified_experimental_outliersrm <- modified[-which(modified$Mn_rate
%in% modified_experimental_outliers),]
dim(modified_experimental_outliersrm)
#boxplot(modified_experimental_outliersrm$Mn_rate)
modified_control_outliers <- boxplot(modified$Untreated_rate, plot = FALSE)$out
modified_control_outliersrm <- modified[-which(modified$Untreated_rate
%in% modified_control_outliers),]
#boxplot(modified_control_outliersrm$Untreated_rate)
#Looking at distribution of mutation rate for unmodified regions
unmodified_experimental_outliers <- boxplot(unmodified$Mn_rate, plot = FALSE)$out
unmodified_experimental_outliersrm <- unmodified[-which(unmodified$Mn_rate
%in% unmodified_experimental_outliers),]
#boxplot(unmodified_experimental_outliersrm$Mn_rate)
unmodified_control_outliers <- boxplot(unmodified$Untreated_rate, plot = FALSE)$out
unmodified_control_outliersrm <- unmodified[-which(unmodified$Untreated_rate
%in% unmodified_control_outliers),]
#boxplot(unmodified_control_outliersrm$Untreated_rate)
par(mfrow = c(4,1))
hist(modified_experimental_outliersrm$Mn_rate, nclass = 20,
main = "Mutation Rate for Modified Sites - Experimental",, xlab = "Mutation Rate")
hist(modified_control_outliersrm$Untreated_rate, nclass = 20,
main = "Mutation Rate for Modified Sites - Control",, xlab = "Mutation Rate")
hist(unmodified_experimental_outliersrm$Mn_rate, nclass = 20,
main = "Mutation Rate for Un-modified Sites - Experimental",, xlab = "Mutation Rate")
hist(unmodified_control_outliersrm$Untreated_rate, nclass = 20,
main = "Mutation Rate for Un-modified Sites - Control",, xlab = "Mutation Rate")
#Looking at distribution of mutation rate for modified regions
modified_experimental_outliers <- boxplot(modified$Mn_rate, plot = FALSE)$out
modified_experimental_outliersrm <- modified[-which(modified$Mn_rate
%in% modified_experimental_outliers),]
modified_control_outliers <- boxplot(modified$Untreated_rate, plot = FALSE)$out
modified_control_outliersrm <- modified[-which(modified$Untreated_rate
%in% modified_control_outliers),]
#Looking at distribution of mutation rate for unmodified regions
unmodified_experimental_outliers <- boxplot(unmodified$Mn_rate, plot = FALSE)$out
unmodified_experimental_outliersrm <- unmodified[-which(unmodified$Mn_rate
%in% unmodified_experimental_outliers),]
unmodified_control_outliers <- boxplot(unmodified$Untreated_rate, plot = FALSE)$out
unmodified_control_outliersrm <- unmodified[-which(unmodified$Untreated_rate
%in% unmodified_control_outliers),]
par(mfrow = c(4,1))
hist(modified_experimental_outliersrm$Mn_rate, nclass = 20,
main = "Mutation Rate for Modified Sites - Experimental",, xlab = "Mutation Rate")
hist(modified_control_outliersrm$Untreated_rate, nclass = 20,
main = "Mutation Rate for Modified Sites - Control",, xlab = "Mutation Rate")
hist(unmodified_experimental_outliersrm$Mn_rate, nclass = 20,
main = "Mutation Rate for Un-modified Sites - Experimental",, xlab = "Mutation Rate")
hist(unmodified_control_outliersrm$Untreated_rate, nclass = 20,
main = "Mutation Rate for Un-modified Sites - Control",, xlab = "Mutation Rate")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in experimental Sample", y = "Frequency")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in experimental Sample", y = "Frequency")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in experimental Sample", y = "Mutation Rate")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in Experimental Sample", y = "Mutation Rate")
#Small p-value indicates that the groups do not come from the same distribution
kruskal.test(Mn_rate ~ Sequence, data = new.filtered)
#Post-hoc Dunn Test for multiple comparisons
dunnTest(Mn_rate ~ Sequence, data = new.filtered, method = "bonferroni")
#Small p-value indicates that the groups do not come from the same distribution
kruskal.test(Mn_rate ~ Sequence, data = new.filtered)
#Post-hoc Dunn Test for multiple comparisons
FSA::dunnTest(Mn_rate ~ Sequence, data = new.filtered, method = "bonferroni")
install.packages("FSA")
#Small p-value indicates that the groups do not come from the same distribution
kruskal.test(Mn_rate ~ Sequence, data = new.filtered)
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate) %>%
filter(Mn_rate < 0.8, Untreated_rate < 0.8) #filter(Mn_rate < 0.010022, Untreated_rate < 0.000855)
allmods <- gsub("none", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
#logdata
par(mfrow = c(2, 1))
plot(logdata$AllModifications ~ logdata$Mn_rate, ylab = "Modified", xlab = "Mn_rate")
plot(logdata$AllModifications ~ logdata$Untreated_rate,
ylab = "Modified", xlab = "Mg_rate (Control)")
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate) %>%
filter(Mn_rate < 0.8, Untreated_rate < 0.8)
allmods <- gsub("none", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
logdata %>% ggplot(aes(x = Mn_rate, y = AllModifications)) + geom_point()
par(mfrow = c(2, 1))
plot(logdata$AllModifications ~ logdata$Mn_rate, ylab = "Modified", xlab = "Mn_rate")
plot(logdata$AllModifications ~ logdata$Untreated_rate,
ylab = "Modified", xlab = "Mg_rate (Control)")
logdata
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate)
allmods <- gsub("none", 0, logdata$AllModifications)
allmods <- gsub("not modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
logdata %>% ggplot(aes(x = Mn_rate, y = AllModifications)) + geom_point()
par(mfrow = c(2, 1))
plot(logdata$AllModifications ~ logdata$Mn_rate, ylab = "Modified", xlab = "Mn_rate")
plot(logdata$AllModifications ~ logdata$Untreated_rate,
ylab = "Modified", xlab = "Mg_rate (Control)")
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate)
allmods <- gsub("not modified", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
logdata %>% ggplot(aes(x = Mn_rate, y = AllModifications)) + geom_point()
par(mfrow = c(2, 1))
plot(logdata$AllModifications ~ logdata$Mn_rate, ylab = "Modified", xlab = "Mn_rate")
plot(logdata$AllModifications ~ logdata$Untreated_rate,
ylab = "Modified", xlab = "Mg_rate (Control)")
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate)
allmods <- gsub("not modified", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
par(mfrow = c(2, 1))
plot(logdata$AllModifications ~ logdata$Mn_rate, ylab = "Modified", xlab = "Mn_rate",
col = "red")
plot(logdata$AllModifications ~ logdata$Untreated_rate,
ylab = "Modified", xlab = "Mg_rate (Control)", col = "blue")
hm1 <- glm(AllModifications ~ Mn_rate + Untreated_rate, family = binomial, logdata)
faraway::sumary(hm1)
#If the null model has one parameter and us true, we see the difference from a chi-square distribution is very large (the probability is very low)
1- pchisq(q = 59.92470, df = 2)
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "red")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "red")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Model for Modified vs. Mn_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Model for Modified vs. Mn_rate and Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Model for Modified vs. Mn_rate + Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Modified vs. Mn_rate + Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
hm1 <- glm(AllModifications ~ Mn_rate + Untreated_rate, family = binomial, logdata)
#both variables seem to have significant effect
faraway::sumary(hm1)
#If the null model has one parameter and us true, we see the difference from a chi-square distribution is very large (the probability is very low)
1- pchisq(q = 206.62670, df = 2)
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate)
allmods <- gsub("not modified", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
hm1treated <- glm(AllModifications ~ Mn_rate, family = binomial, logdata)
anova(hm1, hm1treated, test = "chi")
hm1treated <- glm(AllModifications ~ Mn_rate, family = binomial, logdata)
anova(hm1, hm1treated, test = "chi")
hm1treated <- glm(AllModifications ~ Mn_rate, family = binomial, logdata)
anova(hm1treated, hm1, test = "chi")
hm1treated <- glm(AllModifications ~ Mn_rate, family = binomial, logdata)
anova(hm1treated, hm1, test = "Chi")
linpred <- predict(hm1)
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
head(predprob)
head(linpred)
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
head(predprob)
head(linpred)
head(ilogi(linpred))
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
head(predprob)
head(linpred)
head(ilogit(linpred))
car::marginalModelPlots(hm1)
exp(beta)
exp(beta)
exp(beta)
linpred <- predict(hm1)
predprob <- pred(hm1, type = "response")
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
rawres <- logdata$AllModifications - predprob
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
rawres <- logdata$AllModifications - predprob
plot(rawres, residuals(hm1, type = "response"))
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
rawres <- logdata$AllModifications - predprob
plot(rawres, residuals(hm1, type = "response"))
-2 * sum(logdata$AllModifications*log(predprob) + (1-logdata$AllModifications)*log(1-predprob))
sumary(hm1)
linpred <- predict(hm1)
predprob <- predict(hm1, type = "response")
rawres <- logdata$AllModifications - predprob
plot(rawres, residuals(hm1, type = "response"))
-2 * sum(logdata$AllModifications*log(predprob) + (1-logdata$AllModifications)*log(1-predprob))
sumary(hm1)
mmps(hm1)
car::marginalModelPlots(hm1)
linpred <- predict(hm1)
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.5, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.2, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.1, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.6, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.9, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.5, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
(11/(22+11))
logistic <- function(x){1/(1+exp(-x))}
logit <- function(p){log(p/(1-p))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.5, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
car::marginalModelPlots(hm1)
car::marginalModelPlots(hm1)
car::marginalModelPlots(hm1)
logistic <- function(x){1/(1+exp(-x))}
diagnostics <- mutate(logdata, residuals=residuals(hm1), linpred=predict(hm1), predprob = logistic(linpred), check=predict(hm1, type="response"))
diagnostics <- mutate(diagnostics, predout = ifelse(predprob < 0.5, "no", "yes"))
xtabs( ~ AllModifications + predout, diagnostics)
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Modified vs. Mn_rate + Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Modified vs. Mn_rate + Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
beta <- coef(hm1)
plot(jitter(AllModifications,0.1) ~ jitter(Mn_rate),
data=logdata, xlab="Mn_rate", ylab="Modified",pch=".",
main = "Logistic Regression Modified vs. Mn_rate + Untreated_rate")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0), add = TRUE)
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.005), add = TRUE, lty = 2, col = "blue")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.03), add = TRUE, lty = 2, col = "green")
curve(ilogit(beta[1] + beta[2]*x + beta[3]*0.05), add = TRUE, lty = 2, col = "red")
logdata <- new.filtered %>% select(AllModifications, Mn_rate, Untreated_rate)
allmods <- gsub("not modified", 0, logdata$AllModifications)
allmods <- gsub("modified", 1, allmods)
logdata$AllModifications <- as.numeric(allmods)
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
plot <- ggplot(data = new.filtered, mapping = aes(x = Mn_rate, y = Untreated_rate,
col = AllModifications))
plot + geom_point() + xlim(0, 0.10) + ylim(0, 0.05) +
geom_smooth(method = "lm") +
labs(title = "Mutation rates in Control vs. Experimental Condition for all Nucleotide Sites",
x = "Mn_rate (Experimental)", y = "Untreated_rate (Control)")
new.filtered %>% ggplot(aes(x= Mn_rate)) + geom_histogram() +
facet_wrap("AllModifications", ncol = 1, scales = "free_y") +
xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites",
x = "Mutation Rate in experimental Sample", y = "Frequency")
new.filtered %>% ggplot(aes(x= Mn_rate)) + geom_histogram() +
facet_wrap("AllModifications", ncol = 1, scales = "free_y") +
xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites",
x = "Mutation Rate in experimental Sample", y = "Frequency")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in Experimental Sample", y = "Mutation Rate")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in Experimental Sample", y = "Mutation Rate")
new.filtered  %>% ggplot(aes(x= Sequence, y = Mn_rate)) + geom_boxplot() +
facet_wrap("AllModifications", scale = "free_y") +
#xlim(0, 0.1) +
labs(title = "Histograms of Mutation Rates for Modified vs. Non-Modified Sites by Nucleic Acid",
x = "Mutation Rate in Experimental Sample", y = "Mutation Rate")
